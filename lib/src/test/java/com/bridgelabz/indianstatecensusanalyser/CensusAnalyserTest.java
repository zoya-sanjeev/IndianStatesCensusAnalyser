/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.bridgelabz.indianstatecensusanalyser;

import org.junit.Test;
import org.junit.rules.ExpectedException;

import com.bridgelabz.indianstatecensusanalyser.CSVStateCensus;

import static org.junit.Assert.*;

import org.junit.Assert;

public class CensusAnalyserTest {
	private static final String INDIA_CENSUS_CSV_FILE_PATH = "./src/test/resources/IndianStatesCensus.csv";
	private static final String CSV_WRONG_FILE_PATH="./IndianStatesCensus.csv";
	private static final String INCORRECT_FILE_FORMAT = "./src/test/resources/CensusDataWrongType.txt";
	private static final String CSV_CENSUS_WRONG_DELIMITER = "./src/test/resources/IndianCensusWrongDelimiter.csv";
	private static final String CSV_CENSUS_WRONG_HEADER = "./src/test/resources/CsvFileWrongHeader.csv";
	private static final String STATE_CSV_FILE_PATH = "./src/test/resources/IndianStateCodes.csv";
	private static final String STATE_CSV_FILE_WRONG_PATH = "./IndianStateCodes.csv";
	private static final String STATE_CSV_WRONG_TYPE = "./src/test/resources/StateCodeWrongType.txt";
	private static final String STATE_CSV_WRONG_DELIMITER = "./src/test/resources/StateCodeWrongDelimiter.csv";
	private static final String STATE_CSV_WRONG_HEADER = "./src/test/resources/StateCodeWrongHeader.csv";
	
	
    @Test public void givenIndiaCensusData_whenCorrectIndianCensusCSVFile_returnsCorrectNumberRecords() {
        try {
            StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadIndiaCensusData(INDIA_CENSUS_CSV_FILE_PATH);
            Assert.assertEquals(29, numOfRecords);
        } catch (CensusAnalyserException e) {
        }
        
    }
    
    @Test public void givenIndiaCensusData_whenWrongPath_ShouldThrowException() {
    	try {
            StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadIndiaCensusData(CSV_WRONG_FILE_PATH);

        } catch (CensusAnalyserException e) {
        	Assert.assertEquals(CensusAnalyserException.ExceptionType.CENSUS_FILE_PROBLEM, e.type);
        }
    }
    @Test 
    public void givenIndiaCensusData_WithWrongFileType_ShouldThrowException() {
        try {
        	StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadIndiaCensusData(INCORRECT_FILE_FORMAT);
        } catch (CensusAnalyserException e) {
            Assert.assertEquals(CensusAnalyserException.ExceptionType.CENSUS_INCORRECT_FILE_FORMAT, e.type);
        }
    }
    
    @Test
    public void givenIndiaCensusData_IndiaCensusDataWithWrongDelimiter_ShouldReturnCustomExceptionType() {
        try {
            StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadIndiaCensusData(CSV_CENSUS_WRONG_DELIMITER);
        } catch (CensusAnalyserException e) {
            Assert.assertEquals(CensusAnalyserException.ExceptionType.CSV_FILE_INTERNAL_ISSUES, e.type);
        }
    }
    @Test
    public void givenIndiaCensusData_InIndiaCensusDataMissingHeader_ShouldReturnCustomExceptionType() {
        try {
        	StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadIndiaCensusData(CSV_CENSUS_WRONG_HEADER );
        } catch (CensusAnalyserException e) {
            Assert.assertEquals(CensusAnalyserException.ExceptionType.CSV_FILE_INTERNAL_ISSUES, e.type);
        }
    }
    
    @Test public void givenStateData_whenCorrectStateCSVFile_returnsCorrectNumberRecords() {
        try {
            StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadStateCode(STATE_CSV_FILE_PATH);
            Assert.assertEquals(37, numOfRecords);
        } catch (CensusAnalyserException e) {
        }
        
    }
    
    @Test public void givenStatesData_whenWrongPath_ShouldThrowException() {
    	try {
            StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadStateCode(STATE_CSV_FILE_WRONG_PATH);

        } catch (CensusAnalyserException e) {
        	Assert.assertEquals(CensusAnalyserException.ExceptionType.CENSUS_FILE_PROBLEM, e.type);
        }
    }
    
    @Test 
    public void givenStatesData_WithWrongFileType_ShouldThrowException() {
        try {
        	StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadStateCode(STATE_CSV_WRONG_TYPE);
        } catch (CensusAnalyserException e) {
            Assert.assertEquals(CensusAnalyserException.ExceptionType.CENSUS_INCORRECT_FILE_FORMAT, e.type);
        }
    }
    
    @Test
    public void givenStatesData_statesDataWithWrongDelimiter_ShouldReturnCustomExceptionType() {
        try {
            StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadStateCode(STATE_CSV_WRONG_DELIMITER);
        } catch (CensusAnalyserException e) {
            Assert.assertEquals(CensusAnalyserException.ExceptionType.CSV_FILE_INTERNAL_ISSUES, e.type);
        }
    }
    
    @Test
    public void givenStatesData_StateDataMissingHeader_ShouldReturnCustomExceptionType() {
        try {
        	StateCensusAnalyser censusAnalyser = new StateCensusAnalyser();
            int numOfRecords = censusAnalyser.loadStateCode(STATE_CSV_WRONG_HEADER);
        } catch (CensusAnalyserException e) {
            Assert.assertEquals(CensusAnalyserException.ExceptionType.CSV_FILE_INTERNAL_ISSUES, e.type);
        }
    }
   
}
